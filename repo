// Root: /src/App.jsx import React from "react"; import StakeForm from "./components/StakeForm"; import RewardCalculator from "./components/RewardCalculator"; import ClaimButton from "./components/ClaimButton"; import AnalyticsDashboard from "./components/AnalyticsDashboard";

export default function App() { return ( <div className="min-h-screen bg-black text-green-400 p-4"> <h1 className="text-3xl font-bold mb-6">HFV Staking DApp</h1> <div className="grid gap-6"> <StakeForm /> <RewardCalculator /> <ClaimButton /> <AnalyticsDashboard /> </div> </div> ); }

// File: /src/components/StakeForm.jsx import React, { useState } from "react"; import { ethers } from "ethers"; import stakingAbi from "../contracts/HFVStaking.json";

const stakingAddress = process.env.REACT_APP_HFV_STAKING;

export default function StakeForm() { const [amount, setAmount] = useState(""); const [status, setStatus] = useState("");

const stakeTokens = async () => { try { const provider = new ethers.BrowserProvider(window.ethereum); const signer = await provider.getSigner(); const staking = new ethers.Contract(stakingAddress, stakingAbi, signer); const parsedAmount = ethers.parseUnits(amount, 18);

await staking.stake(parsedAmount);
  setStatus("Staked successfully");
} catch (err) {
  setStatus("Stake failed: " + err.message);
}

};

return ( <div className="bg-green-950 p-4 rounded-xl shadow"> <h2 className="text-xl font-semibold mb-2">Stake HFV</h2> <input type="number" className="w-full p-2 rounded text-black" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder="Amount of HFV" /> <button onClick={stakeTokens} className="mt-2 bg-green-600 px-4 py-2 rounded"> Stake </button> {status && <p className="mt-2 text-sm">{status}</p>} </div> ); }

// File: /src/components/RewardCalculator.jsx import React, { useState } from "react";

export default function RewardCalculator() { const [input, setInput] = useState("");

const reward = () => { const staked = parseFloat(input); if (isNaN(staked)) return 0; return (staked * 0.4 * 17.38).toFixed(2); };

return ( <div className="bg-green-950 p-4 rounded-xl shadow"> <h2 className="text-xl font-semibold mb-2">Reward Calculator</h2> <input type="number" className="w-full p-2 rounded text-black" value={input} onChange={(e) => setInput(e.target.value)} placeholder="Enter staked HFV" /> <p className="mt-2">Estimated Reward (after 21 days): <strong>{reward()}</strong> HFV</p> </div> ); }

// File: /src/components/ClaimButton.jsx import React, { useState } from "react"; import { ethers } from "ethers"; import stakingAbi from "../contracts/HFVStaking.json";

const stakingAddress = process.env.REACT_APP_HFV_STAKING;

export default function ClaimButton() { const [status, setStatus] = useState("");

const claimReward = async () => { try { const provider = new ethers.BrowserProvider(window.ethereum); const signer = await provider.getSigner(); const staking = new ethers.Contract(stakingAddress, stakingAbi, signer);

await staking.claim();
  setStatus("Claimed successfully!");
} catch (err) {
  setStatus("Claim failed: " + err.message);
}

};

return ( <div className="bg-green-950 p-4 rounded-xl shadow"> <h2 className="text-xl font-semibold mb-2">Claim Rewards</h2> <button onClick={claimReward} className="bg-green-600 px-4 py-2 rounded"> Claim </button> {status && <p className="mt-2 text-sm">{status}</p>} </div> ); }

